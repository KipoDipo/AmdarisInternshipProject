@startuml Class Diagram
' top to bottom direction
' left to right direction

hide methods
skinparam nodesep 25
skinparam ranksep 25
' skinparam linetype ortho


class "IdentityUser (ASP.Net)" as IdentityUser
{
    +Id: Guid
    +Email: String
    +UserName: String
    +PasswordHash: String
    +PhoneNumber: String
}

interface IBase
{
    +Id : Guid
    +CreatedAt : DateTime
    +UpdatedAt : DateTime
}

interface IDeletable
{
    +IsDeleted : bool
    +DeletedAt : DateTime
}

abstract User
{
    +DisplayName: String
    +FirstName: String
    +LastName?: String
    +Bio? : String
    +ProfilePicture? : byte[]
}

class Admin
{
}

class Listener
{
    +FollowingArtists: List<Artist>
    +FollowingListeners: List<Listener>
    +CreatedPlaylists: List<Playlist>
    +LikedPlaylists: List<Playlist>
    +LikedSongs: List<Song>
    ..
    +Badges: List<Badge>
    +Titles: List<Title>

    +EquippedBadge: Badge
    +EquippedTitle: Title
    ..
    +IsSubscribed: bool
    +SubscriptionEndDate: DateTime
}

class Distributor
{
    +Artists: List<Artist>
}

class Artist
{
    +Followers: List<Listener>
    +Albums: List<Album>
    +Singles: List<Song>

    +Distributor: Distributor
}

package "Music Related\t\t\t\t\t\t\t\t\t\t" <<cloud>> #DDDDDD 
{

    class Album
    {
        +Title: String
        +ReleaseDate: DateTime
        +Songs: List<Song>
        +Cover: byte[]
        +CreatedBy: Artist
    }

    class Song
    {
        +Title: String
        +Duration: TimeSpan
        +ReleaseDate: DateTime
        +Genres: List<Genre>
        +Data: String
        +Cover: byte[]
        +Artist: Artist
        +Album?: Album
    }

    class Playlist
    {
        +Title: String
        +Description: String
        +Songs: List<Song>
        +Owner: Listener
    }

    class Genre
    {
        +Name: String
    }
}

package "Customization\n\n" <<cloud>> #DDDDDD 
{
    class Badge
    {
        +Name: String
        +Description: String
        +Icon: byte[]
    }

    class Title
    {
        +Name: String
        +Description: String
    }
}

IBase <|-- IDeletable

IdentityUser --[hidden] User

User <|-- Admin
User <|-- Listener
User <|-- Artist
User <|-- Distributor


Artist "0..n" --l "0..n" Listener : "\t\t"
Artist "1  " *-- "0..n  " Song
Artist "1" *-- "0..n   " Album

Distributor o--l "0..n" Artist : "\tManages\t"

Album *-l "1..n" Song : "\t"

Playlist o-r Song: "\tContains\t"
' Playlist -left[hidden]- Title
' Title -left[hidden]- Badge

Listener *--d "0..n" Playlist : "creates"
Listener -- "0..n" Playlist : "likes"
Listener -- "0..n" Song : "likes"

Listener -- Badge : "equips"
Listener -- "0..n" Badge : "owns"
Listener -- Title : "equips\t\t"
Listener -- "0..n" Title : "owns"

Song -- "1..n" Genre : "\n"


' Song "0..n" -- "0..n" Playlist : "\t\t"
' Playlist "0..n" -- "0..n" Listener : "\t\t"


@enduml